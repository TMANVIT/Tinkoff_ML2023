# -*- coding: utf-8 -*-
"""Untitled16.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fx9QlVmAtDGGe0jGzyuAP76UaUgs-p6u
"""

import ast 
import sys
import os
import math

def leven_alg(str_one, str_two):
  n, m = len(str_one), len(str_two)
  if n > m:
    str_one, str_two = str_two, str_one
    n, m = m, n
  current_row = range(n + 1)
  for i in range(1, m + 1):
    previous_row, current_row = current_row, [i] + [0] * n
    for j in range(1, n + 1):
      add, delete, change = previous_row[j] + 1, current_row[j - 1] + 1,\
                               previous_row[j - 1] 
      if str_one[j - 1] != str_two[i - 1]:
        change += 1
      current_row[j] = min(add, delete, change)
  return current_row[n]/math.sqrt(len(str_one)**2 + len(str_two)**2)

if __name__ == '__main__':
  input, source = sys.argv[1:]
  dir_file = open(input).read().split()
  mark = ''
  for i in range(0, len(dir_file), 2):
    mark += str(leven_alg(list(open(dir_file[i], encoding='UTF-8').read()),\
                           list(open(dir_file[i + 1], encoding='UTF-8').read())\
                            )) + '\n'
  file_ans = open(source, 'w')
  file_ans.write(mark)
  file_ans.close()